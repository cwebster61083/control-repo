input {
  file {
    path => "/var/log/puppetlabs/puppetserver/puppetserver.log"
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601} "
      negate => true
      what => "previous"
    }
    type => "puppetserver"
    start_position => "beginning"
  }
  file {
    path => "/var/log/puppetlabs/puppetserver/puppetserver-[0-9]*.log.gz"
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601} "
      negate => true
      what => "previous"
    }
    type => "puppetserver"
    mode => "read"
    file_completed_action => "log"
    file_completed_log_path => "/var/tmp/completed.log"
    start_position => "beginning"
    }
}

filter { 
  grok { 
    match => { "message" => 
      "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} (?<ID>\s\[.*?]|\[.*?]) (?<Source>\[.*?]) %{GREEDYDATA:message}" 
      }
    }
    date {
       match => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS", "ISO8601"  ]
       target => "timestamp"
    }
}

output {
  elasticsearch { 
    hosts => ["elastic.puppetdebug.vlan:9200"] 
    index => "logstash-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}
